{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\verab\\\\Desktop\\\\summer_practice\\\\task_2\\\\src\\\\components\\\\Timer\\\\Timer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./Timer.css\";\nimport icon from \"../../img/timer.png\";\nimport sound from \"../../sounds/sound.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [running, setRun] = useState(false);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    // Восстанавливаем сохраненное значение минут\n    const savedMinutes = localStorage.getItem(\"minutes\");\n    if (savedMinutes) {\n      setMinutes(parseInt(savedMinutes));\n    }\n    // Добавляем обработчик события перед выходом из приложения\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      // Удаляем обработчик события перед выходом из приложения\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, []);\n  useEffect(() => {\n    // Сохраняем значение минут в локальное хранилище\n    localStorage.setItem(\"minutes\", minutes.toString());\n  }, [minutes]);\n  function handleBeforeUnload(event) {\n    // Сохраняем значения минут и флага ranning перед выходом из приложения\n    const message = JSON.stringify({\n      minutes,\n      isRunning: running\n    });\n    event.returnValue = message;\n    return message;\n  }\n  function start() {\n    setRun(true);\n    // Устанавливаем интервал, который будет уменьшать количество секунд каждую секунду\n    intervalRef.current = setInterval(() => {\n      setSeconds(prevSeconds => {\n        if (prevSeconds === 0) {\n          // Если количество секунд равно нулю, уменьшаем количество минут на 1 и устанавливаем количество секунд в 59\n          setMinutes(prevMinutes => {\n            if (prevMinutes === 0) {\n              // Если количество минут равно нулю, останавливаем таймер\n              setRun(false);\n              clearInterval(intervalRef.current);\n              // Запускаем звуковой эффект\n              const audio = new Audio(sound);\n              audio.play();\n              return prevMinutes;\n            }\n            return prevMinutes - 1;\n          });\n          return 59;\n        }\n        return prevSeconds - 1;\n      });\n    }, 1000);\n  }\n  function stop() {\n    setRun(false);\n    clearInterval(intervalRef.current);\n  }\n  function reset() {\n    setRun(false);\n    clearInterval(intervalRef.current);\n    setMinutes(0);\n    setSeconds(0);\n    // Возвращаем дефолтный цвет фона\n    document.body.style.backgroundColor = \"#fff\";\n    // Останавливаем звуковой эффект\n    const audio = new Audio(sound);\n    audio.pause();\n    audio.currentTime = 0;\n  }\n  function handlerMinutesChange(event) {\n    if (!running) {\n      setMinutes(parseInt(event.target.value));\n    }\n  }\n  function handlerSecondsChange(event) {\n    if (!running) {\n      setSeconds(parseInt(event.target.value));\n    }\n  }\n  useEffect(() => {\n    // Обновляем значения минут и секунд в инпутах в реальном времени\n    if (running) {\n      document.title = `${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\n    } else {\n      document.title = \"Таймер\";\n    }\n    document.body.style.backgroundColor = \"#fff\";\n    if (minutes === 0 && seconds === 0) {\n      // Если количество минут и секунд равно нулю, изменяем цвет фона на красный\n      document.body.style.backgroundColor = \"#ff0000\";\n    }\n  }, [minutes, seconds, running]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"60\",\n        value: minutes,\n        onChange: handlerMinutesChange,\n        disabled: running\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"60\",\n        value: seconds,\n        onChange: handlerSecondsChange,\n        disabled: running\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [!running && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: start,\n        children: \"\\u0421\\u0442\\u0430\\u0440\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), running && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: stop,\n        children: \"\\u0421\\u0442\\u043E\\u043F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: reset,\n        children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"b7THXwY852tbS+zEyEDGd/d7Jhw=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","icon","sound","jsxDEV","_jsxDEV","Timer","_s","minutes","setMinutes","seconds","setSeconds","running","setRun","intervalRef","savedMinutes","localStorage","getItem","parseInt","window","addEventListener","handleBeforeUnload","removeEventListener","setItem","toString","event","message","JSON","stringify","isRunning","returnValue","start","current","setInterval","prevSeconds","prevMinutes","clearInterval","audio","Audio","play","stop","reset","document","body","style","backgroundColor","pause","currentTime","handlerMinutesChange","target","value","handlerSecondsChange","title","padStart","className","children","type","min","max","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/verab/Desktop/summer_practice/task_2/src/components/Timer/Timer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Timer.css\"\r\nimport icon from \"../../img/timer.png\"\r\nimport sound from \"../../sounds/sound.mp3\"\r\n\r\nfunction Timer() {\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [running, setRun] = useState(false);\r\n  const intervalRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    // Восстанавливаем сохраненное значение минут\r\n    const savedMinutes = localStorage.getItem(\"minutes\");\r\n    if (savedMinutes) {\r\n      setMinutes(parseInt(savedMinutes));\r\n    }\r\n    // Добавляем обработчик события перед выходом из приложения\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n    return () => {\r\n      // Удаляем обработчик события перед выходом из приложения\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Сохраняем значение минут в локальное хранилище\r\n    localStorage.setItem(\"minutes\", minutes.toString());\r\n  }, [minutes]);\r\n\r\n  function handleBeforeUnload(event) {\r\n    // Сохраняем значения минут и флага ranning перед выходом из приложения\r\n    const message = JSON.stringify({ minutes, isRunning: running });\r\n    event.returnValue = message;\r\n    return message;\r\n  }\r\n\r\n  function start() {\r\n    setRun(true);\r\n    // Устанавливаем интервал, который будет уменьшать количество секунд каждую секунду\r\n    intervalRef.current = setInterval(() => {\r\n      setSeconds(prevSeconds => {\r\n        if (prevSeconds === 0) {\r\n          // Если количество секунд равно нулю, уменьшаем количество минут на 1 и устанавливаем количество секунд в 59\r\n          setMinutes(prevMinutes => {\r\n            if (prevMinutes === 0) {\r\n              // Если количество минут равно нулю, останавливаем таймер\r\n              setRun(false);\r\n              clearInterval(intervalRef.current);\r\n              // Запускаем звуковой эффект\r\n              const audio = new Audio(sound);\r\n              audio.play();\r\n              return prevMinutes;\r\n            }\r\n            return prevMinutes - 1;\r\n          });\r\n          return 59;\r\n        }\r\n        return prevSeconds - 1;\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  function stop() {\r\n    setRun(false);\r\n    clearInterval(intervalRef.current);\r\n  }\r\n\r\n  function reset() {\r\n    setRun(false);\r\n    clearInterval(intervalRef.current);\r\n    setMinutes(0);\r\n    setSeconds(0);\r\n    // Возвращаем дефолтный цвет фона\r\n    document.body.style.backgroundColor = \"#fff\";\r\n    // Останавливаем звуковой эффект\r\n    const audio = new Audio(sound);\r\n    audio.pause();\r\n    audio.currentTime = 0;\r\n  }\r\n\r\n  function handlerMinutesChange(event) {\r\n    if (!running) {\r\n      setMinutes(parseInt(event.target.value));\r\n    }\r\n  }\r\n\r\n  function handlerSecondsChange(event) {\r\n    if (!running) {\r\n      setSeconds(parseInt(event.target.value));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Обновляем значения минут и секунд в инпутах в реальном времени\r\n    if (running) {\r\n      document.title = `${minutes.toString().padStart(2, \"0\")}:${seconds\r\n        .toString()\r\n        .padStart(2, \"0\")}`;\r\n    } else {\r\n      document.title = \"Таймер\";\r\n    }\r\n    document.body.style.backgroundColor = \"#fff\";\r\n    if (minutes === 0 && seconds === 0) {\r\n      // Если количество минут и секунд равно нулю, изменяем цвет фона на красный\r\n      document.body.style.backgroundColor = \"#ff0000\";\r\n    }\r\n  }, [minutes, seconds, running]);\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"60\"\r\n          value={minutes}\r\n          onChange={handlerMinutesChange}\r\n          disabled={running}\r\n        />\r\n        <span>:</span>\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"60\"\r\n          value={seconds}\r\n          onChange={handlerSecondsChange}\r\n          disabled={running}\r\n        />\r\n      </div>\r\n      <div className=\"button-container\">\r\n        {!running && (\r\n          <button className=\"button\" onClick={start}>\r\n            Старт\r\n          </button>\r\n        )}\r\n        {running && (\r\n          <button className=\"button\" onClick={stop}>\r\n            Стоп\r\n          </button>\r\n        )}\r\n        <button className=\"button\" onClick={reset}>\r\n          Сброс\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}